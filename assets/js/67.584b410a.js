(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{225:function(t,a,i){"use strict";i.r(a);var e=i(1),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"gitlab"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitlab","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab")]),i("p",[t._v("GitLab是利用 Ruby on Rails 一个开源的版本管理系统，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。它拥有与Github类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序(Wall)进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。")]),i("h2",{attrs:{id:"gitlab服务构成"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitlab服务构成","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab服务构成")]),i("p",[t._v("GitLab由以下服务构成：")]),i("ul",[i("li",[i("code",[t._v("nginx")]),t._v("：静态Web服务器")]),i("li",[i("code",[t._v("gitlab-shell")]),t._v("：用于处理Git命令和修改authorized keys列表")]),i("li",[i("code",[t._v("gitlab-workhorse")]),t._v(": 轻量级的反向代理服务器")]),i("li",[i("code",[t._v("logrotate")]),t._v("：日志文件管理工具")]),i("li",[i("code",[t._v("postgresql")]),t._v("：数据库")]),i("li",[i("code",[t._v("redis")]),t._v("：缓存数据库")]),i("li",[i("code",[t._v("sidekiq")]),t._v("：用于在后台执行队列任务（异步执行）")]),i("li",[i("code",[t._v("unicorn")]),t._v("：An HTTP server for Rack applications，GitLab Rails应用是托管在这个服务器上面的。")])]),i("h3",{attrs:{id:"gitlab-shell"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-shell","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab shell")]),i("p",[t._v("两个作用：为GitLab处理Git命令、修改authorized keys列表")]),i("p",[t._v("通过SSH访问GitLab Server时，GitLab Shell会：")]),i("ol",[i("li",[t._v("限制执行预定义好的Git命令（git push, git pull, git annex）")]),i("li",[t._v("调用GitLab Rails API 检查权限")]),i("li",[t._v("执行pre-receive钩子（在GitLab企业版中叫做Git钩子）")]),i("li",[t._v("执行你请求的动作")]),i("li",[t._v("处理GitLab的post-receive动作")]),i("li",[t._v("处理自定义的post-receive动作")])]),i("p",[t._v("当通过http(s)访问GitLab Server时，工作流程取决于你是从Git仓库拉取(pull)代码还是向git仓库推送(push)代码。如果你是从Git仓库拉取(pull)代码，GitLab Rails应用会全权负责处理用户鉴权和执行Git命令的工作；如果你是向Git仓库推送(push)代码，GitLab Rails应用既不会进行用户鉴权也不会执行Git命令，它会把以下工作交由GitLab Shell进行处理：")]),i("ol",[i("li",[t._v("调用GitLab Rails API 检查权限")]),i("li",[t._v("执行pre-receive钩子（在GitLab企业版中叫做Git钩子）")]),i("li",[t._v("执行你请求的动作")]),i("li",[t._v("处理GitLab的post-receive动作")]),i("li",[t._v("处理自定义的post-receive动作")])]),i("h2",{attrs:{id:"gitlab工作流程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitlab工作流程","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab工作流程")]),i("p",[i("img",{attrs:{src:"'./images/gitlab/workflow.png'",alt:""}})]),i("h2",{attrs:{id:"gitlab-部署"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-部署","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab 部署")]),i("p",[i("a",{attrs:{href:"https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/",target:"_blank",rel:"noopener noreferrer"}},[t._v("rpm镜像地址")]),i("a",{attrs:{href:"https://www.cnblogs.com/kevingrace/p/5985918.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitlab rpm包快速部署")])]),i("h2",{attrs:{id:"gitlab-维护"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-维护","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab 维护")]),i("h2",{attrs:{id:"gitlab-备份与迁移"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-备份与迁移","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab 备份与迁移")]),i("p",[i("a",{attrs:{href:"https://blog.csdn.net/ouyang_peng/article/details/77070977",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitlab备份与迁移")]),i("a",{attrs:{href:"https://blog.csdn.net/shennongminblog/article/details/76158419",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab数据备份与恢复")])]),i("p",[t._v("必须保证gitlab版本一致")]),i("p",[t._v("备份\ncd /opt/gitlab-6.4.3-1/\n./use_gitlab\ncd /opt/gitlab-6.4.3-1/apps/gitlab/htdocs\nbundle exec bin/rake gitlab:backup:create RAILS_ENV=production")]),i("p",[t._v("还原")]),i("pre",[i("code",[t._v("cd /opt/gitlab-6.4.3-1/\n./use_gitlab\ncd /opt/gitlab-6.4.3-1/apps/gitlab/htdocs\nbundle exec bin/rake  gitlab:backup:restore RAILS_ENV=production   BACKUP=1405247282\nchown git:git -R /opt/gitlab-6.4.3-1/apps/gitlab/repositories // 必须加，否则项目为空\n")])]),i("p",[t._v("crontab定时备份脚本")]),i("p",[t._v("use_gitlab使用了exec，脚本会重新打开一个进程，没有上下文，所以需要单独提出path.")]),i("p",[t._v("脚本需要使用root账户运行。脚本包含了rsync远程同步到nas相应目录中，按照自己实际修改即可（预先生成ssh证书，免密码登录）。")]),i("pre",[i("code",[t._v('#!/bin/bash\n\nif [ `id -u` -ne 0 ];then\n  echo "this backup script must be exec as root."\n  exit\nfi\ndate\nPATH="/opt/gitlab-6.4.3-1/apps/gitlabci/gitlabci-runner/bin:/opt/gitlab-6.4.3-1/apps/gitlab/gitlab-shell/bin:/opt/gitlab-6.4.3-1/redis/bin:/opt/gitlab-6.4.3-1/sqlite/bin:/opt/gitlab-6.4.3-1/python/bin:/opt/gitlab-6.4.3-1/perl/bin:/opt/gitlab-6.4.3-1/git/bin:/opt/gitlab-6.4.3-1/ruby/bin:/opt/gitlab-6.4.3-1/mysql/bin:/opt/gitlab-6.4.3-1/apache2/bin:/opt/gitlab-6.4.3-1/common/bin:$PATH"\n\necho "backup gitlab to local storage begin.. "\n\ncd /opt/gitlab-6.4.3-1/apps/gitlab/htdocs\n\nbundle exec bin/rake gitlab:backup:create RAILS_ENV=production\n\necho "rsync  -avzP  --delete  /data/backups_gitlab xxx@xxx.com:/mnt/disk1/docs/rsync_gitlab_backup"\nrsync  -avzP  --delete  /data/backups_gitlab 172.16.1.75:/mnt/disk1/docs/rsync_gitlab_backup/\n\ndate\necho "this job is end."\n')])]),i("h2",{attrs:{id:"gitlab-磁盘空间不足问题处理"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-磁盘空间不足问题处理","aria-hidden":"true"}},[t._v("#")]),t._v(" gitlab 磁盘空间不足问题处理")]),i("p",[t._v("gitlab通过rpm包安装后，默认存储位置在"),i("code",[t._v("/var/opt/gitlab/git-data/repositories")]),t._v("，通常var分区很小，会打满，两种方式解决")]),i("p",[t._v("1.通过Linux目录挂载到另一个目录方式解决：")]),i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("gitlab-ctl stop\ninitctl stop gitlab-runsvdir\nvim /etc/fstab\n/data1/gitlab /var/opt/gitlab  none    bind  0 0 # 重点\nmount  -a\ninitctl start gitlab-runsvdir\ngitlab-ctl reconfigure\ngitlab-ctl restart\n")])]),i("p",[t._v("2.修改配置文件")]),i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("vim /etc/gitlab/gitlab.rb\n# 在git_data_dirs下面加入 \ngit_data_dir '/data/gitlab'\n# 停止当前gitlab 重新加载配置\ngitlab-ctl stop\ngitlab-ctl reconfigure\n# 重新加载后，会发现在/data/gitlab目录下多出一个repositories目录，最后启动gitlab即可\ngitlab-ctl start\n")])]),i("h2",{attrs:{id:"基于gitlab-ci快速构建持续集成环境"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#基于gitlab-ci快速构建持续集成环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 基于gitlab CI快速构建持续集成环境")]),i("h3",{attrs:{id:"什么是持续集成"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#什么是持续集成","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是持续集成")]),i("p",[t._v("持续集成（Continuous Integration，简称CI）指的是，频繁地（一天多次）将代码集成到主干。")]),i("h3",{attrs:{id:"持续集成的好处"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#持续集成的好处","aria-hidden":"true"}},[t._v("#")]),t._v(" 持续集成的好处")]),i("ol",[i("li",[t._v("快速发现错误")])]),i("p",[t._v("每完成一点更新，就集成到主干，可以快速发现错误，定位错误也比较容易")]),i("ol",{attrs:{start:"2"}},[i("li",[t._v("防止分支大幅偏离主干")])]),i("p",[t._v("如果不是经常集成，主干又在不断更新，会导致以后集成的难度变大，甚至难以集成。")]),i("p",[t._v("持续集成的目的，就是让产品可以快速迭代，同时还能保持高质量。它的核心措施是，代码集成到主干之前，必须通过自动化测试。只要有一个测试用例失败，就不能集成。")]),i("h3",{attrs:{id:"持续部署"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#持续部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 持续部署")]),i("p",[t._v("持续交付（Continuous delivery）指的是，频繁地将软件的新版本，交付给质量团队或者用户，以供评审。如果评审通过，代码就进入生产阶段。")]),i("p",[t._v("持续部署（continuous deployment）是持续交付的下一步，指的是代码通过评审以后，自动部署到生产环境。")]),i("h3",{attrs:{id:"持续集成的原则"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#持续集成的原则","aria-hidden":"true"}},[t._v("#")]),t._v(" 持续集成的原则")]),i("p",[t._v("业界普遍认同的持续集成的原则包括：")]),i("p",[t._v("需要版本控制软件保障团队成员提交的代码不会导致集成失败。常用的版本控制软件有 git、svn 等；\n开发人员必须及时向版本控制库中提交代码，也必须经常性地从版本控制库中更新代码到本地；\n需要有专门的集成服务器来执行集成构建。根据项目的具体实际，集成构建可以被软件的修改来直接触发，也可以定时启动，如每半个小时构建一次；\n必须保证构建的成功。如果构建失败，修复构建过程中的错误是优先级最高的工作。一旦修复，需要手动启动一次构建。")]),i("h3",{attrs:{id:"持续集成系统的组成"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#持续集成系统的组成","aria-hidden":"true"}},[t._v("#")]),t._v(" 持续集成系统的组成")]),i("p",[t._v("由此可见，一个完整的构建系统必须包括：")]),i("p",[t._v("一个自动构建过程，包括自动编译、分发、部署和测试等。\n一个代码存储库，即需要版本控制软件来保障代码的可维护性，同时作为构建过程的素材库。\n一个持续集成服务器。")]),i("h2",{attrs:{id:"坑"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#坑","aria-hidden":"true"}},[t._v("#")]),t._v(" 坑")]),i("p",[t._v("默认路径为tmp/backups")]),i("p",[t._v("root用户登录时，使用"),i("code",[t._v("ls -al")]),t._v("查看backups文件夹的权限，发现值为")]),i("pre",[i("code",[t._v("drwxr-xr-x. 2 root root 4096 2月 16 10:08 backups\n")])]),i("p",[t._v("判断是执行实际操作的gitlab相关用户：git，没有得到足够的权限")]),i("pre",[i("code",[t._v("root@myserver:~# chown git /var/opt/gitlab/backups\nroot@myserver:~# chmod 700 /var/opt/gitlab/backups\n")])]),i("p",[t._v("报错：You have already activated rake 0.9.2.2,but our Gemfile requires rake 10.1.0,Using bundle exec may solve this.")]),i("p",[t._v("原因是默认的path路径不对，需要执行下bitnami自带的环境变量设置脚本： use_gitlab 即可解决。")])])}],!1,null,null,null);a.default=r.exports}}]);