(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{267:function(t,a,e){"use strict";e.r(a);var s=e(1),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),e("pre",[e("code",[t._v("npm install vue-router\n")])]),e("h1",{attrs:{id:"项目引入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目引入","aria-hidden":"true"}},[t._v("#")]),t._v(" 项目引入")]),e("p",[e("img",{attrs:{src:"vue-router/vue-router%E5%BC%95%E5%85%A5.png",alt:"vue-router引入"}})]),e("h1",{attrs:{id:"router-js-的配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#router-js-的配置","aria-hidden":"true"}},[t._v("#")]),t._v(" router.js 的配置")]),e("p",[e("img",{attrs:{src:"vue-router/router.js%E9%85%8D%E7%BD%AE.png",alt:"router.js配置"}})]),e("p",[t._v("mode")]),e("p",[t._v("默认为hash，但是用hash模式的话，页面地址会变成被加个#号比较难看了， "),e("code",[t._v("http://localhost:8080/#/linkParams/xuxiao")]),t._v("\n所以一般我们会采用 history模式，它会使得我们的地址像平常一样。"),e("code",[t._v("http://localhost:8080/linkParams/xuxiao")])]),e("p",[e("code",[t._v("补：其他模式")])]),e("p",[t._v("base")]),e("p",[t._v("应用的基路径。例如，如果整个单页应用服务在 "),e("code",[t._v("/app/")]),t._v(' 下，然后 base 就应该设为 "/app/"。\n一般写成 __dirname，在webpack中有配置。')]),e("p",[t._v("routes")]),e("p",[t._v("routes就是我们的大核心了，里面包含我们所有的页面配置。\npath 很简单，就是我们的访问这个页面的路径\nname 给这个页面路径定义一个名字，当在页面进行跳转的时候也可以用名字跳转，要唯一哟\ncomponent 组件，就是咱们在最上面引入的 import ...了，当然这个组件的写法还有一种"),e("code",[t._v("懒加载")])]),e("p",[t._v("懒加载的方式，我们就不需要再用import去引入组件了，直接如下即可。懒加载的好处是当你访问到这个页面的时候才会去加载相关资源，这样的话能提高页面的访问速度。")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("component: resolve => require(['./page/linkParamsQuestion.vue'], resolve)\n")])]),e("h1",{attrs:{id:"route的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#route的使用","aria-hidden":"true"}},[t._v("#")]),t._v(" route的使用")]),e("h3",{attrs:{id:"router传参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#router传参数","aria-hidden":"true"}},[t._v("#")]),t._v(" router传参数")]),e("ol",[e("li",[t._v("路由匹配参数")])]),e("p",[t._v("首先在路由配置文件router.js中做好配置。标红出就是对 "),e("code",[t._v("/linkParams/")]),t._v(" 的路径做拦截，这种类型的链接后面的内容会被vue-router映射成name参数。")]),e("p",[e("img",{attrs:{src:"%E8%B7%AF%E7%94%B1%E5%8C%B9%E9%85%8D%E5%8F%82%E6%95%B0.png",alt:"路由匹配参数.png"}})]),e("p",[t._v("代码中获取name的方式如下：")]),e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// 链接里的name被封装进了 this.$route.params")]),t._v("\n")])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Get请求传参")])]),e("p",[t._v("在链接后加上?进行传参。")]),e("p",[t._v("样例： http://localhost:8080/linkParamsQuestion?age=18")]),e("p",[t._v("项目里获取")]),e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("//问号后面参数会被封装进 this.$route.query;")]),t._v("\n")])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("编程式导航")])]),e("p",[t._v("主要利用 "),e("code",[t._v("<router-link>")]),t._v(" 来创建可跳转链接，还可以在方法里利用 this.$router.push('xxx') 来进行跳转。")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 字符串,这里的字符串是路径path匹配噢，不是router配置里的name\nthis.$router.push('home')\n\n// 对象\nthis.$router.push({ path: 'home' })\n\n// 命名的路由 这里会变成 /user/123\nthis.$router.push({ name: 'user', params: { userId: 123 }})\n\n// 带查询参数，变成 /register?plan=private\nthis.$router.push({ path: 'register', query: { plan: 'private' }})\n")])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("导航钩子")])]),e("p",[t._v("导航钩子函数，主要是在导航跳转的时候做一些操作，比如可以做"),e("code",[t._v("登录的拦截")]),t._v("，而钩子函数根据其生效的范围可以分为：")]),e("ul",[e("li",[t._v("全局钩子函数")]),e("li",[t._v("路由独享钩子函数")]),e("li",[t._v("组件内钩子函数")])]),e("p",[t._v("全局钩子函数")]),e("blockquote",[e("p",[t._v("做一些全局性的路由拦截")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("router.beforeEach((to, from, next)=>{\n  //do something\n  next();\n});\nrouter.afterEach((to, from, next) => {\n    console.log(to.path);\n});\n")])]),e("p",[t._v("每个钩子方法接收三个参数：")]),e("p",[t._v("to: Route: 即将要进入的目标 路由对象")]),e("p",[t._v("from: Route: 当前导航正要离开的路由")]),e("p",[t._v("next: Function: 一定要调用该方法来 resolve 这个钩子。执行效果依赖 next 方法的调用参数。")]),e("p",[t._v("next(): 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 confirmed （确认的）。")]),e("ul",[e("li",[e("p",[t._v("next(false): 中断当前的导航。如果浏览器的 URL 改变了（可能是用户手动或者浏览器后退按钮），那么 URL 地址会重置到 from 路由对应的地址。")])]),e("li",[e("p",[t._v("next('/') 或者 next({ path: '/' }): 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。")])])]),e("p",[t._v("确保要调用 next 方法，否则钩子就不会被 resolved。")]),e("p",[t._v("路由独享钩子函数")]),e("p",[t._v("可以做一些单个路由的跳转拦截。在配置文件编写代码即可")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const router = new VueRouter({\n  routes: [\n    {\n      path: '/foo',\n      component: Foo,\n      beforeEnter: (to, from, next) => {\n        // ...\n      }\n    }\n  ]\n})\n")])]),e("p",[t._v("组件内钩子函数")]),e("p",[t._v("更细粒度的路由拦截，只针对一个进入某一个组件的拦截。")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const Foo = {\n  template: `...`,\n  beforeRouteEnter (to, from, next) {\n    // 在渲染该组件的对应路由被 confirm 前调用\n    // 不！能！获取组件实例 `this`\n    // 因为当钩子执行前，组件实例还没被创建\n  },\n  beforeRouteUpdate (to, from, next) {\n    // 在当前路由改变，但是该组件被复用时调用\n    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，\n    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。\n    // 可以访问组件实例 `this`\n  },\n  beforeRouteLeave (to, from, next) {\n    // 导航离开该组件的对应路由时调用\n    // 可以访问组件实例 `this`\n  }\n}\n")])]),e("h3",{attrs:{id:"使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用场景")]),e("p",[t._v("一般用于登录态的校验，没有登录跳转到登录页；权限的校验等等")]),e("h1",{attrs:{id:"其他技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他技巧","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他技巧")]),e("h3",{attrs:{id:"滚动行为"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#滚动行为","aria-hidden":"true"}},[t._v("#")]),t._v(" 滚动行为")]),e("p",[t._v("在利用vue-router去做跳转的时候，到了新页面如果对页面的滚动条位置有要求的话，可以利用下面这个方法。")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const router = new VueRouter({\n  routes: [...],\n  scrollBehavior (to, from, savedPosition) {\n    // return 期望滚动到哪个的位置\n  }\n})\n")])]),e("p",[t._v("scrollBehavior 方法接收 to 和 from 路由对象。\n第三个参数 savedPosition 当且仅当 popstate 导航 (mode为 history 通过浏览器的 前进/后退 按钮触发) 时才可用。\n这里就不细致的讲了，文档都有也非常简单，记住有这个东西就行。")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//所有路由新页面滚动到顶部：\nscrollBehavior (to, from, savedPosition) {\n  return { x: 0, y: 0 }\n}\n\n//如果有锚点\nscrollBehavior (to, from, savedPosition) {\n  if (to.hash) {\n    return {\n      selector: to.hash\n    }\n  }\n}\n")])]),e("h3",{attrs:{id:"路由元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由元信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 路由元信息")]),e("p",[t._v("这个概念非常简单，就是在路由配置里有个属性叫 meta，它的数据结构是一个对象。你可以放一些key-value进去，方便在钩子函数执行的时候用。")]),e("p",[t._v("举个例子，你要配置哪几个页面需要登录的时候，你可以在meta中加入一个 requiresAuth标志位。")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const router = new VueRouter({\n  routes: [\n    {\n      path: '/foo',\n      component: Foo,\n      meta: { requiresAuth: true }\n    }\n  ]\n})\n")])]),e("p",[t._v("然后在 全局钩子函数 beforeEach中去校验目标页面是否需要登录。")]),e("blockquote",[e("p",[t._v("这个auth.loggedIn 方法是外部引入的，你可以先写好一个校验是否登录的方法，再import进 router.js中去判断。")])]),e("h2",{attrs:{id:"vue-router-打开新页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-打开新页面","aria-hidden":"true"}},[t._v("#")]),t._v(" vue-router 打开新页面")]),e("p",[t._v("2.1.0版本后，使用路由对象的resolve方法解析路由，可以得到location、router、href等目标路由的信息。得到href就可以使用window.open开新窗口了。")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("href"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("this")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("resolve")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        name"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        query"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          bar\n        "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindow"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("open")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("href"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'_blank'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);a.default=n.exports}}]);