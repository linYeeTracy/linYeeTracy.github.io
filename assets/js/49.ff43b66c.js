(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{199:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"mongo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongo","aria-hidden":"true"}},[t._v("#")]),t._v(" mongo")]),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/flyfish111222/article/details/51891130",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/flyfish111222/article/details/51891130")])]),a("p",[a("a",{attrs:{href:"https://juejin.im/post/58f99b3cac502e006395e6e7",target:"_blank",rel:"noopener noreferrer"}},[t._v("koa + vue + mongo")])]),a("p",[a("a",{attrs:{href:"https://imhjm.com/article/5a37d5787dd03248a2e8d586",target:"_blank",rel:"noopener noreferrer"}},[t._v("博客地址1")])]),a("p",[a("a",{attrs:{href:"http://www.runoob.com/mongodb/mongodb-sort.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令大全")])]),a("h2",{attrs:{id:"下载地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载地址","aria-hidden":"true"}},[t._v("#")]),t._v(" 下载地址")]),a("p",[a("a",{attrs:{href:"http://dl.mongodb.org/dl/win32/x86_64",target:"_blank",rel:"noopener noreferrer"}},[t._v("mongoDB windows系统各个64位版本下载地址")])]),a("h2",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用命令")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$gt:大于\n$lt:小于\n$gte:大于或等于\n$lte:小于或等于\n$ne:不等于\n")])]),a("ul",[a("li",[t._v("in 和 not in ($in $nin)")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.things.find({j:{$in: [2,4,6]}});\ndb.things.find({j:{$nin: [2,4,6]}});\n")])]),a("ul",[a("li",[t._v("取模运算")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('如下面的运算：\ndb.things.find( "this.a % 10 == 1")\n可用$mod代替：\n\ndb.things.find( { a : { $mod : [ 10 , 1 ] } } )\n')])]),a("ul",[a("li",[t._v("$all")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$all和$in类似，但是他需要匹配条件内所有的值：\n\n如有一个对象：\n\n{ a: [ 1, 2, 3 ] }\n下面这个条件是可以匹配的：\n\ndb.things.find( { a: { $all: [ 2, 3 ] } } );\n但是下面这个条件就不行了：\n\ndb.things.find( { a: { $all: [ 2, 3, 4 ] } } );\n")])]),a("ul",[a("li",[t._v("$size")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$size是匹配数组内的元素数量的，如有一个对象：{a:["foo"]}，他只有一个元素：\n\n下面的语句就可以匹配：db.things.find( { a : { $size: 1 } } );\n官网上说不能用来匹配一个范围内的元素，如果想找$size<5之类的，他们建议创建一个字段来保存元素的数量。\n\nYou cannot use $size to find a range of sizes (for example: arrays with more than 1 element). If you need to query for a range, create an extra size field that you increment when you add elements.\n')])]),a("ul",[a("li",[t._v("$exists")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$exists用来判断一个元素是否存在：\n\n如：\n\ndb.things.find( { a : { $exists : true } } ); // 如果存在元素a,就返回\ndb.things.find( { a : { $exists : false } } ); // 如果不存在元素a，就返回\n")])]),a("ul",[a("li",[t._v("$type")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$type 基于 bson type来匹配一个元素的类型，像是按照类型ID来匹配，不过我没找到bson类型和id对照表。\n\ndb.things.find( { a : { $type : 2 } } ); // matches if a is a string\ndb.things.find( { a : { $type : 16 } } ); // matches if a is an int\n")])]),a("ul",[a("li",[t._v("正则表达式")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mongo支持正则表达式，如：\n\ndb.customers.find( { name : /acme.*corp/i } ); // 后面的i的意思是区分大小写\n")])]),a("ul",[a("li",[t._v("查询数据内的值")])]),a("p",[t._v('下面的查询是查询colors内red的记录，如果colors元素是一个数据,数据库将遍历这个数组的元素来查询。db.things.find( { colors : "red" } );')]),a("ul",[a("li",[t._v("$elemMatch")])]),a("p",[t._v("如果对象有一个元素是数组，那么$elemMatch可以匹配内数组内的元素：")]),a("blockquote",[a("p",[t._v('t.find( { x : { $elemMatch : { a : 1, b : { $gt : 1 } } } } )\n{ "_id" : ObjectId("4b5783300334000000000aa9"),\n"x" : [ { "a" : 1, "b" : 3 }, 7, { "b" : 99 }, { "a" : 11 } ]\n}$elemMatch : { a : 1, b : { $gt : 1 } } 所有的条件都要匹配上才行。\n注意，上面的语句和下面是不一样的。')])]),a("blockquote",[a("p",[t._v('t.find( { "x.a" : 1, "x.b" : { $gt : 1 } } )\n$elemMatch是匹配{ "a" : 1, "b" : 3 }，而后面一句是匹配{ "b" : 99 }, { "a" : 11 }')])]),a("ul",[a("li",[t._v("查询嵌入对象的值")])]),a("p",[t._v('db.postings.find( { "author.name" : "joe" } );\n注意用法是author.name，用一个点就行了。更详细的可以看这个链接： dot notation')]),a("p",[t._v("举个例子：")]),a("blockquote",[a("p",[t._v('db.blog.save({ title : "My First Post", author: {name : "Jane", id : 1}})\n如果我们要查询 authors name 是Jane的, 我们可以这样：')])]),a("blockquote",[a("p",[t._v('db.blog.findOne({"author.name" : "Jane"})\n如果不用点，那就需要用下面这句才能匹配：')])]),a("p",[t._v('db.blog.findOne({"author" : {"name" : "Jane", "id" : 1}})\n下面这句：')]),a("p",[t._v('db.blog.findOne({"author" : {"name" : "Jane"}})\n是不能匹配的，因为mongodb对于子对象，他是精确匹配。')]),a("ul",[a("li",[t._v("元操作符 $not 取反")])]),a("p",[t._v("如：")]),a("p",[t._v("db.customers.find( { name : { $not : /acme.*corp/i } } );db.things.find( { a : { $not : { $mod : [ 10 , 1 ] } } } ); mongodb还有很多函数可以用，如排序，统计等，请参考原文。")]),a("ul",[a("li",[t._v("位置操作符$能够更新第一个匹配的数组元素通过$elemMatch()操作符匹配多个内嵌文档的查询条件")])]),a("p",[t._v("考虑如下的students集合文档grades字段是一个嵌套字段的文档")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n  _id: 4,\n  grades: [\n     { grade: 80, mean: 75, std: 8 },\n     { grade: 85, mean: 90, std: 5 },\n     { grade: 90, mean: 85, std: 3 }\n  ]\n}\n")])]),a("p",[t._v("如下语句会更新嵌套文档中的std值为6，条件是文档的主键是4，字段grades的嵌套文档字段grade字段值小于等于90mean字段值大于80")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.students.update(\n   {\n     _id: 4,\n     grades: { $elemMatch: { grade: { $lte: 90 }, mean: { $gt: 80 } } }\n   },\n   { $set: { "grades.$.std" : 6 } }\n)\n')])]),a("p",[t._v("上面的操作语句会更新掉第一个匹配的嵌套文档集合，如下：")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n  _id: 4,\n  grades: [\n    { grade: 80, mean: 75, std: 8 },\n    { grade: 85, mean: 90, std: 6 },\n    { grade: 90, mean: 85, std: 3 }\n  ]\n}\n")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[root@snails ~]# ps -ef|grep mongod\n[root@snails ~]# mongo --host=127.0.0.1 --port=27017\nMongoDB shell version: 3.2.7\nconnecting to: 127.0.0.1:27017/test\n\n> show dbs  #显示数据库列表 \n> show collections  #显示当前数据库中的集合（类似关系数据库中的表）\n> show users  #显示用户\n> use <db name>  #切换当前数据库，如果数据库不存在则创建数据库。 \n> db.help()  #显示数据库操作命令，里面有很多的命令 \n> db.foo.help()  #显示集合操作命令，同样有很多的命令，foo指的是当前数据库下，一个叫foo的集合，并非真正意义上的命令 \n> db.foo.find()  #对于当前数据库中的foo集合进行数据查找（由于没有条件，会列出所有数据） \n> db.foo.find( { a : 1 } )  #对于当前数据库中的foo集合进行查找，条件是数据中有一个属性叫a，且a的值为1\n")])]),a("h2",{attrs:{id:"其他命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他命令")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('> db.dropDatabase()  #删除当前使用数据库\n> db.cloneDatabase("127.0.0.1")   #将指定机器上的数据库的数据克隆到当前数据库\n> db.copyDatabase("mydb", "temp", "127.0.0.1")  #将本机的mydb的数据复制到temp数据库中\n> db.repairDatabase()  #修复当前数据库\n> db.getName()  #查看当前使用的数据库，也可以直接用db\n> db.stats()  #显示当前db状态\n> db.version()  #当前db版本\n> db.getMongo()  ＃查看当前db的链接机器地址\n> db.serverStatus()  #查看数据库服务器的状态\n')])]),a("h2",{attrs:{id:"权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限","aria-hidden":"true"}},[t._v("#")]),t._v(" 权限")]),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/u013066244/article/details/53874216",target:"_blank",rel:"noopener noreferrer"}},[t._v("权限")]),a("a",{attrs:{href:"https://blog.csdn.net/leonzhouwei/article/details/46564141",target:"_blank",rel:"noopener noreferrer"}},[t._v("mongoDB 3.0 安全权限访问控制")])]),a("h2",{attrs:{id:"id-4323原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id-4323原则","aria-hidden":"true"}},[t._v("#")]),t._v(" _id 4323原则")]),a("p",[t._v("4位Unix时间戳")]),a("p",[t._v("3位机器码")]),a("p",[t._v("2位进程编号")]),a("p",[t._v("3位计数器码，从一个随机数开始累计")]),a("p",[t._v("Mongod会自己根据上面得出来的结果生成ID")]),a("h2",{attrs:{id:"model-find-then-model-find-exec-then-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#model-find-then-model-find-exec-then-区别","aria-hidden":"true"}},[t._v("#")]),t._v(" model.find().then()  model.find().exec().then() 区别")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("model"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("find")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("then")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodel"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("find")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("exec")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("then")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[t._v("区别在于： mongoose 的所有查询操作返回的结果都是 query （官方文档是这样写的），并非一个完整的promise。\n而加上.exec()则将会返回成为一个完整的 promise 对象，但是其是 mongoose 自行封装的 promise ，与 ES6 标准的 promise 是有所出入的（你应该会在控制台看到相关的警告），而且官方也明确指出，在未来的版本将会废除自行封装的promise，改为 ES6 标准，因此建议楼主在使用过程中替换为 ES6 的 promise，如下：")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mongoose "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'mongoose'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmongoose"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Promise "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" global"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Promise"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("h2",{attrs:{id:"mongo备份"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongo备份","aria-hidden":"true"}},[t._v("#")]),t._v(" mongo备份")]),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/pangguoming/p/6028984.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB数据备份")]),a("a",{attrs:{href:"https://blog.csdn.net/yabingshi_tech/article/details/46741541",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/yabingshi_tech/article/details/46741541")])]),a("h2",{attrs:{id:"mongodb导出-导入-迁移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb导出-导入-迁移","aria-hidden":"true"}},[t._v("#")]),t._v(" MongoDB导出-导入-迁移")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  ./mongodump -d 数据库名 -o/home/mongodb/backupdmp/\n  ./mongorestore-d bamuta  --port 27019  /home/mongodb/backupdmp/bamuta\n  show dbs 检查结果\n")])]),a("h3",{attrs:{id:"连接特定端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接特定端口","aria-hidden":"true"}},[t._v("#")]),t._v(" 连接特定端口")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mongo localhost:65521\n")])]),a("h2",{attrs:{id:"mongoose-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongoose-api","aria-hidden":"true"}},[t._v("#")]),t._v(" mongoose api")]),a("h3",{attrs:{id:"数组操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组操作")]),a("ul",[a("li",[t._v("数组元素模糊匹配")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('数组字段badges每个包含该元素black的文档都将被返回\n\n> db.users.find({badges:"black"},{"_id":1,badges:1})\n{ "_id" : 1, "badges" : [ "blue", "black" ] }\n{ "_id" : 4, "badges" : [ "red", "black" ] }\n{ "_id" : 6, "badges" : [ "black", "blue" ] }\n')])]),a("ul",[a("li",[t._v("数组元素精确(全)匹配")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('数组字段badges的值为["black","blue"]的文档才能被返回(数组元素值和元素顺序全匹配)\n> db.users.find({badges:["black","blue"]},{"_id":1,badges:1})\n{ "_id" : 6, "badges" : [ "black", "blue" ] }\n')])]),a("ul",[a("li",[t._v("通过数组下标返回指定的文档")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('数组的下标从0开始，指定下标值则返回对应的文档\n返回数组badges中第一个元素值为black的文档\n> db.users.find({"badges.1":"black"},{"_id":1,badges:1})\n{ "_id" : 1, "badges" : [ "blue", "black" ] }\n{ "_id" : 4, "badges" : [ "red", "black" ] }\n')])]),a("ul",[a("li",[t._v("范围条件任意元素匹配查询")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//查询数组finished的元素值既大于15，又小于20的文档\n        > db.users.find( { finished: { $gt: 15, $lt: 20}},{"_id":1,finished:1})\n        { "_id" : 1, "finished" : [ 17, 3 ] }\n        { "_id" : 2, "finished" : [ 11, 25 ] }\n        { "_id" : 6, "finished" : [ 18, 12 ] }\n\n        //下面插入一个新的文档，仅包含单个数组元素\n        > db.users.insert({"_id":7,finished:[19]})\n        WriteResult({ "nInserted" : 1 })\n\n        //再次查询，新增的文档也被返回\n        > db.users.find( { finished: { $gt: 15, $lt: 20}},{"_id":1,finished:1})\n        { "_id" : 1, "finished" : [ 17, 3 ] }\n        { "_id" : 2, "finished" : [ 11, 25 ] }\n        { "_id" : 6, "finished" : [ 18, 12 ] }\n        { "_id" : 7, "finished" : [ 19 ] }\n')])]),a("ul",[a("li",[t._v("数组内嵌文档查询")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//查询数组points元素1内嵌文档键points的值小于等于55的文档(精确匹配)\n        > db.users.find( { \'points.0.points\': { $lte: 55}},{"_id":1,points:1})\n        { "_id" : 4, "points" : [ { "points" : 53, "bonus" : 15 }, { "points" : 51, "bonus" : 15 } ] }\n\n    //查询数组points内嵌文档键points的值小于等于55的文档，此处通过.成员的方式实现\n        > db.users.find( { \'points.points\': { $lte: 55}},{"_id":1,points:1})\n        { "_id" : 3, "points" : [ { "points" : 81, "bonus" : 8 }, { "points" : 55, "bonus" : 20 } ] }\n        { "_id" : 4, "points" : [ { "points" : 53, "bonus" : 15 }, { "points" : 51, "bonus" : 15 } ] }\n')])]),a("ul",[a("li",[t._v("查询")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//多个条件\ndb.survey.find(\n   { results: { $elemMatch: { product: "xyz", score: { $gte: 8 } } } }\n)\n')])]),a("ul",[a("li",[t._v("upset操作")])]),a("p",[t._v("mongo没有提供对象数组的Upsert操作——不存在时插入，存在时更新。实现方法就是")]),a("p",[t._v("a. 当不知道是否存在时使用"),a("code",[t._v("$addToSet")]),t._v(",如果已经存在，则什么都不发生;如果插入的是多个元素，需要使用"),a("code",[t._v("$each")]),t._v("，否则将以整个输入添加")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('>db.stores.update(\n    {"_id":1},\n    {$addToSet:{$each:{"fruits":["apple", "oranges"]}}}\n)\n')])]),a("ul",[a("li",[t._v("从数组中删除对象")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.stores.update(\n    { },\n    { $pull: { fruits: { $in: [ "apples", "oranges" ] }, vegetables: "carrots" } },\n    { multi: true }\n)\n')])]),a("h3",{attrs:{id:"对多个字段模糊查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对多个字段模糊查询","aria-hidden":"true"}},[t._v("#")]),t._v(" 对多个字段模糊查询")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.find({\n  $or:[\n    {name:{$regex:/a/}},\n    {age:{$regex:/5/}}\n  ]\n})\n")])]),a("h3",{attrs:{id:"正则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则","aria-hidden":"true"}},[t._v("#")]),t._v(" 正则")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.collection.find( { sku: /adC/i } );\n等效于下面这种写法 \ndb.collection.find( { sku: { $regex: 'abC', $options: 'i' } } );\n")])]),a("p",[t._v("参数 "),a("code",[t._v("i")]),t._v(" ====== 加了这个参数，表示不区分大小写\n参数 "),a("code",[t._v("m")]),t._v(" ===== 个人理解这个参数是用来匹配value中有换行符(\\n)的情形。\n参数 "),a("code",[t._v("s")]),t._v(" ===== 允许点字符（.）匹配所有的字符，包括换行符。\n参数 "),a("code",[t._v("x")]),t._v(" ====== 官网的大意是忽视空白字符。")]),a("h3",{attrs:{id:"更新操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 更新操作")]),a("h4",{attrs:{id:"更新一条和更新多条"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新一条和更新多条","aria-hidden":"true"}},[t._v("#")]),t._v(" 更新一条和更新多条")]),a("p",[t._v("正常来说，只更新匹配到的第一条")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("swxx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"ZJHM"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"xxx"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"ZJHM"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"23060419730523301X"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[t._v("后面加上可以更新多条的第四个参数，这时候需要用$set操作才能更新多条.")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("swxx"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"ZJHM"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"xxxxxxxxxxxxxxxxxx"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$"),a("span",{attrs:{class:"token keyword"}},[t._v("set")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"ZJHM"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"23060419730523301X"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("ul",[a("li",[a("p",[t._v("update参数1：筛选条件")])]),a("li",[a("p",[t._v("参数2：更新哪些字段")])]),a("li",[a("p",[t._v("参数3：如果没有筛选到符合条件的记录，是否需要将参数2插入到集合中，默认false，不插入")])]),a("li",[a("p",[t._v("参数4：默认false，一次更新一条；true一次更新多条，此时参数2需要使用$set操作")])])]),a("p",[t._v("update只返回更新状态")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n  n: 1,\n  nModified: 1,\n  ok: 1\n}\n")])]),a("p",[t._v("findByIdAndUpdate { new: true } 返回更新后的文档")]),a("h2",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 性能优化")]),a("h3",{attrs:{id:"并行处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并行处理","aria-hidden":"true"}},[t._v("#")]),t._v(" 并行处理")]),a("p",[t._v("count和find/skip/limit是典型的可以并行的运算。")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getPage")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pageSize"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" query"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("await")]),t._v(" db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("count")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" list "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("await")]),t._v(" db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("find")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("skip")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageNo "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("pageSize"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("limit")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageSize"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        count"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        list\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("优化后：")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getPage")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageNo"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pageSize"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" query"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Promise"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("all")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("count")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("find")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("skip")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageNo "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("pageSize"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("limit")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageSize"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        count"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        list"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h2",{attrs:{id:"mongodb-update修改器（-inc-set-unset-push-pop-upsert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-update修改器（-inc-set-unset-push-pop-upsert","aria-hidden":"true"}},[t._v("#")]),t._v(" mongodb update修改器（$inc/$set/$unset/$push/$pop/upsert)")]),a("h3",{attrs:{id:"inc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inc","aria-hidden":"true"}},[t._v("#")]),t._v(" $inc")]),a("blockquote",[a("p",[t._v("修改器$inc可以对文档的某个值为数字型（"),a("code",[t._v("只能为满足要求的数字")]),t._v("）的键进行增减的操作")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"uid"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"201203"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"$inc"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"size"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndb"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"uid"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"201203"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"$inc"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"size"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("h3",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set","aria-hidden":"true"}},[t._v("#")]),t._v(" $set")]),a("blockquote",[a("p",[t._v("用来指定一个键并更新键值，若键不存在并创建。可改变键的值类型.\n对于内嵌文档，使用 "),a("code",[t._v(".")]),t._v("连接的方式")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"uid"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"20120002"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"type"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"3"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"$set"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"size"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndb"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"name"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"toyota"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"$set"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"size.height"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("h3",{attrs:{id:"unset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unset","aria-hidden":"true"}},[t._v("#")]),t._v(" $unset")]),a("blockquote",[a("p",[t._v("删除键, 使用修改器$unset时，不论对目标键使用1、0、-1或者具体的字符串等都是可以删除该目标键。")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"uid"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"20120002"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"type"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"3"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"$unset"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"size"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndb"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"uid"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"20120002"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"type"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"3"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"$unset"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"desc"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"sssssss"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("h3",{attrs:{id:"push-数组修改器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-数组修改器","aria-hidden":"true"}},[t._v("#")]),t._v(" $push - 数组修改器")]),a("blockquote",[a("p",[t._v("$push--向文档的某个数组类型的键添加一个数组元素，不过滤重复的数据。添加时键存在，要求键值类型必须是数组；键不存在，则创建数组类型的键。\n$pushAll 可批量增加数据")])]),a("h3",{attrs:{id:"ne-addtoset-数组修改器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ne-addtoset-数组修改器","aria-hidden":"true"}},[t._v("#")]),t._v(" $ne/$addToSet - 数组修改器")]),a("blockquote",[a("p",[t._v("给数组类型键值添加一个元素时，避免在数组中产生重复数据，$ne在有些情况是不通行的")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"title"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$ne"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"t2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$push"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"title"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"t2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndb"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"toyota"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$addToSet"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"title"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"t2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// $addToSet与$each结合完成批量数组更新")]),t._v("\ndb"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sample"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"evers"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$addToSet"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("database"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$each"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"JS"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"DB"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"DB"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("h3",{attrs:{id:"pop、-pull-数组修改器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pop、-pull-数组修改器","aria-hidden":"true"}},[t._v("#")]),t._v(" $pop、$pull - 数组修改器")]),a("blockquote",[a("p",[t._v("$pop从数组的头或者尾删除数组中的元素")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("//从数组的尾部删除 1")]),t._v("\ndb"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"toyota"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$pop"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"title"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0,1,-1皆可")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// $pull从数组中删除满足条件的元素")]),t._v("\ndb"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"toyota"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$pull"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"title"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"t2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("h3",{attrs:{id:"定位修改器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定位修改器","aria-hidden":"true"}},[t._v("#")]),t._v(" 定位修改器")]),a("blockquote",[a("p",[t._v('在需要对数组中的值进行操作的时候，可通过位置或者定位操作符（"$"）.数组是0开始的，可以直接将下标作为键来选择元素。')])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("db"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"uid"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"001"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$inc"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"comments.0.size"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndb"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"comments.name"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token string"}},[t._v('"t1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$"),a("span",{attrs:{class:"token keyword"}},[t._v("set")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token string"}},[t._v('"comments.$.size"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("h3",{attrs:{id:"upsert-特殊的更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upsert-特殊的更新","aria-hidden":"true"}},[t._v("#")]),t._v(" upsert - 特殊的更新")]),a("blockquote",[a("p",[t._v("当没有符合条件的文档，就以这个条件和更新文档为基础创建一个新的文档，如果找到匹配的文档就正常的更新。")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.c.update({"size":11},{$inc:{"size":3}},true)\n')])]),a("h2",{attrs:{id:"坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#坑","aria-hidden":"true"}},[t._v("#")]),t._v(" 坑")]),a("ul",[a("li",[t._v("如果之前在mongoose中使用过unique唯一索引的话，在使用该唯一索引创建了相关数据后再删除mongoose中的unique代码是无法完全清除该唯一索引的，需要使用mongodb手动清除该集合的唯一索引。")])]),a("h2",{attrs:{id:"待读文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#待读文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 待读文档")]),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/d073a385d282",target:"_blank",rel:"noopener noreferrer"}},[t._v("mongoose schema")])])])}],!1,null,null,null);s.default=e.exports}}]);