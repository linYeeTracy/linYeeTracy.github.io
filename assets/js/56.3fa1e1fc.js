(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{209:function(e,a,t){"use strict";t.r(a);var r=t(1),n=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"array"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#array","aria-hidden":"true"}},[e._v("#")]),e._v(" Array")]),t("h2",{attrs:{id:"reduce对象数组去重"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reduce对象数组去重","aria-hidden":"true"}},[e._v("#")]),e._v(" reduce对象数组去重")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('var arr = [{\n    "name": "Angus",\n    "age": "16"\n}, {\n    "name": "Angus",\n    "age": "16"\n}, {\n    "name": "Jay",\n    "age": "26"\n}, {\n    "name": "Jay",\n    "age": "26"\n}];\nvar hash = {};\narr = arr.reduce(function(item, next) {\n    hash[next.name] ? \'\' : hash[next.name] = true && item.push(next);\n    return item\n}, [])\n')])]),t("h2",{attrs:{id:"删除数组中的指定项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除数组中的指定项","aria-hidden":"true"}},[e._v("#")]),e._v(" 删除数组中的指定项")]),t("ol",[t("li",[e._v("添加原型方法")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Array.prototype.remove = function(val) { \n    var index = this.indexOf(val); \n    if (index > -1) { \n        this.splice(index, 1); \n    } \n};\n")])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("splice(index,len,[item]) 该方法会改变原始数组,实现数组的添加、替换、删除")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var arr = ['a','b','c','d']; \narr.splice(1,0,'ttt');  添加\narr.splice(1,1,'ttt');  替换\narr.splice(1,1);        删除\n")])]),t("h2",{attrs:{id:"difference-array-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#difference-array-values","aria-hidden":"true"}},[e._v("#")]),e._v(" _.difference(array, [values])")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("_.difference([2, 1], [2, 3]);\n// => [1]\n")])]),t("h1",{attrs:{id:"object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object","aria-hidden":"true"}},[e._v("#")]),e._v(" Object")]),t("h2",{attrs:{id:"基本封装方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本封装方法","aria-hidden":"true"}},[e._v("#")]),e._v(" 基本封装方法")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function getItem(key) {\n  return key in ms ? ms[key] : null;\n}\n\nfunction setItem(key, value) {\n  ms[key] = value;\n}\n\nfunction clear() {\n  ms = {};\n}\n")])]),t("h2",{attrs:{id:"object-assign"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object-assign","aria-hidden":"true"}},[e._v("#")]),e._v(" Object.assign()")]),t("blockquote",[t("p",[e._v("浅拷贝")])]),t("p",[e._v("用于对象的合并，如果目标对象与源对象有同名属性，或多个源对象有同名属性，则后面的属性会覆盖前面的属性。")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var target = { a: 1 };\n\nvar source1 = { b: 2 };\nvar source2 = { c: 3 };\n\nObject.assign(target, source1, source2);\ntarget // {a:1, b:2, c:3}\n")])]),t("h4",{attrs:{id:"常见用途"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见用途","aria-hidden":"true"}},[e._v("#")]),e._v(" 常见用途")]),t("p",[e._v("（1）为对象添加属性")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class Point {\n  constructor(x, y) {\n    Object.assign(this, {x, y});\n  }\n}\n")])]),t("p",[e._v("（2）为对象添加方法")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Object.assign(SomeClass.prototype, {\n  someMethod(arg1, arg2) {\n    ···\n  },\n  anotherMethod() {\n    ···\n  }\n});\n")])]),t("p",[e._v("(3) 浅clone")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function clone(origin) {\n  return Object.assign({}, origin);\n}\n")])])])}],!1,null,null,null);a.default=n.exports}}]);