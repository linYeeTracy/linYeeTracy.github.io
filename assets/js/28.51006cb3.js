(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{257:function(e,i,t){"use strict";t.r(i);var a=t(1),l=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"shell"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell","aria-hidden":"true"}},[e._v("#")]),e._v(" shell")]),t("h2",{attrs:{id:"bin-sh-和-bin-bash区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bin-sh-和-bin-bash区别","aria-hidden":"true"}},[e._v("#")]),e._v(" #!/bin/sh 和 #!/bin/bash区别")]),t("p",[t("code",[e._v("#!")]),e._v("用来告诉系统它后面的参数是用来执行该文件的程序")]),t("p",[e._v("sh一般设成bash的软链")]),t("p",[e._v("[work@zjm-testing-app46 cy]$ ll /bin/sh\nlrwxrwxrwx 1 root root 4 Nov 13 2006 /bin/sh ->bash")]),t("p",[e._v("在一般的linux系统当中（如redhat），使用sh调用执行脚本相当于打开了bash的POSIX标准模式")]),t("p",[e._v("也就是说 /bin/sh 相当于 /bin/bash --posix (错误不会继续往下执行)")]),t("p",[e._v("所以，sh跟bash的区别，实际上就是bash有没有开启posix模式的区别")]),t("h2",{attrs:{id:"执行-sh文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行-sh文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 执行.sh文件")]),t("ol",[t("li",[e._v("./加上文件名.sh，如运行hello.sh为./hello.sh【hello.sh必须有x权限】")])]),t("blockquote",[t("p",[e._v("编译 chmod +x filename 这样才能用./filename 来运行")])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("加上文件名.sh，如运行hello.sh为sh hello.sh【hello.sh可以没有x权限】")])]),t("h2",{attrs:{id:"shell-命令和流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-命令和流程控制","aria-hidden":"true"}},[e._v("#")]),e._v(" shell 命令和流程控制")]),t("ul",[t("li",[e._v('echo "xxx${a}"')]),t("li",[e._v("ls 文件列表")]),t("li",[e._v("wc –l file 计算文件行数")]),t("li",[e._v("wc -w file 计算文件中的单词数")]),t("li",[e._v("wc -c file 计算文件中的字符数")]),t("li",[e._v("cp sourcefile destfile 文件拷贝")]),t("li",[e._v("mv oldname newname : 重命名文件或移动文件")]),t("li",[e._v("rm file: 删除文件")]),t("li",[e._v("grep ‘pattern’ file: 在文件内搜索字符串")]),t("li",[e._v("cut -b colnum file: 指定欲显示的文件内容范围，并将它们输出到标准输出设备比如：输出每行第5个到第9个字符cut -b5-9 file.txt千万不要和cat命令混淆")]),t("li",[e._v("cat file.txt: 输出文件内容到标准输出设备（屏幕）上")]),t("li",[e._v("file somefile: 得到文件类型")]),t("li",[e._v("read var: 提示用户输入，并将输入赋值给变量")]),t("li",[e._v("sort file.txt: 对file.txt文件中的行进行排序")]),t("li",[e._v("uniq: 删除文本文件中出现的重复行，比如： sort file.txt | uniq")]),t("li",[e._v("expr: 进行数学运算 add 2 and 3   为   expr 2 “+” 3")]),t("li",[e._v("find: 搜索文件比如：根据文件名搜索find . -name filename -print")]),t("li",[e._v("tee: 将数据输出到标准输出设备(屏幕) 和文件比如：somecommand | tee outfile")]),t("li",[e._v("basename file: 返回不包含路径的文件名比如： basename /bin/tux将返回 tux")]),t("li",[e._v("dirname file: 返回文件所在路径比如：dirname /bin/tux将返回 /bin")]),t("li",[e._v("head file: 打印文本文件开头几行")]),t("li",[e._v("tail file : 打印文本文件末尾几行")]),t("li",[e._v("sed: Sed是一个基本的查找替换程序。可以从标准输入（比如命令管道）读入文本，并将\n结果输出到标准输出（屏幕）。该命令采用正则表达式（见参考）进行搜索。不要和shell中的通配符相混淆。比如：将linuxfocus替换为 LinuxFocus ：cat text.file | sed ’s/linuxfocus/LinuxFocus/’ >newtext.file")]),t("li",[e._v("awk: awk 用来从文本文件中提取字段。缺省地，字段分割符是空格，可以使用-F指定其他分割符。")]),t("li"),t("li"),t("li")]),t("h3",{attrs:{id:"管道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#管道","aria-hidden":"true"}},[e._v("#")]),e._v(" 管道")]),t("p",[e._v("将一个命令的输出作为另外一个命令的输入。")]),t("h3",{attrs:{id:"重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重定向","aria-hidden":"true"}},[e._v("#")]),e._v(" 重定向")]),t("p",[t("code",[e._v(">")]),e._v(" 写入文件并覆盖旧文件\n"),t("code",[e._v(">>")]),e._v(" 追加到文件的尾部，保留旧文件内容")]),t("h3",{attrs:{id:"反短斜线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反短斜线","aria-hidden":"true"}},[e._v("#")]),e._v(" 反短斜线")]),t("p",[e._v("用来查找过去24小时（-mtime –2则表示过去48小时）内修改过的文件,并将其打包")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" #!/bin/sh\n # The ticks are backticks (`) not normal quotes (‘):\n tar -zcvf  lastmod.tar.gz `find . -mtime -1 -type f -print`\n")])]),t("h3",{attrs:{id:"流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流程控制","aria-hidden":"true"}},[e._v("#")]),e._v(" 流程控制")]),t("p",[e._v("通常用"),t("code",[e._v("[ ]")]),e._v("来表示条件测试。注意这里的空格很重要。要确保方括号的空格。")]),t("ul",[t("li",[e._v('[ -f "somefile" ] ：判断是否是一个文件')]),t("li",[e._v('[ -x "/bin/ls" ] ：判断/bin/ls是否存在并有可执行权限')]),t("li",[e._v('[ -n "$var" ] ：判断$var变量是否有值')]),t("li",[e._v('[ "$a" = "$b" ] ：判断$a和$b是否相等')])]),t("p",[e._v("执行"),t("code",[e._v("man test")]),e._v("可以查看所有测试表达式可以比较和判断的类型。")]),t("p",[e._v("if [xxx]\nthen\nxxx\nelif []\nthen\nxxxx\nelse\nxxx\nfi")])])}],!1,null,null,null);i.default=l.exports}}]);