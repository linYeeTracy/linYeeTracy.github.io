(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{195:function(t,e,a){t.exports=a.p+"assets/img/v2-d4575f1b61bfc2b6f4f1dfa69206b35e_b.cad4b965.jpg"},273:function(t,e,a){"use strict";a.r(e);var s=[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"前端性能优化总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 前端性能优化总结")]),s("blockquote",[s("p",[t._v("一个网站的体验，决定了用户是否愿意去了解网站的功能；而网站的功能，决定了用户是否会一票否决网站的体验")])]),s("p",[t._v("作为一个前端er，我们更应该关注以下指标")]),s("p",[t._v("白屏时间、首屏时间、整页时间、DNS时间、CPU占用率")]),s("h2",{attrs:{id:"_1-网络传输性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-网络传输性能优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.网络传输性能优化")]),s("p",[s("img",{attrs:{src:a(195),alt:"嘻嘻"}})]),s("p",[t._v("这是navigation timing监测指标图，从图中我们可以看出，浏览器在得到用户请求之后，经历了下面这些阶段：重定向→拉取缓存→DNS查询→建立TCP链接→发起请求→接收响应→处理HTML元素→元素加载完成。不着急，我们对其中的细节一步步展开讨论：")]),s("p",[t._v("我们都知道，浏览器在向服务器发起请求前，会先查询本地是否有相同的文件，如果有，就会直接拉取本地缓存，这和我们在后台部属的Redis和Memcache类似，都是起到了中间缓冲的作用，我们先看看浏览器处理缓存的策略：")])])}],r=a(1),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},s,!1,null,null,null);e.default=i.exports}}]);