(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{268:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 文档")]),s("p",[s("a",{attrs:{href:"https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-cli 3.0文档")])]),s("h2",{attrs:{id:"vue组件库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue组件库","aria-hidden":"true"}},[t._v("#")]),t._v(" vue组件库")]),s("p",[s("a",{attrs:{href:"https://www.iviewui.com/components/card",target:"_blank",rel:"noopener noreferrer"}},[t._v("iview")])]),s("h2",{attrs:{id:"："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#：","aria-hidden":"true"}},[t._v("#")]),t._v(" ：")]),s("p",[t._v(":是v-bind的语法糖")]),s("p",[t._v('someprop="expr":someprop="expr"区别在于：')]),s("blockquote",[s("p",[t._v("后者引号中的内容你可以当做是一个表达式，而前者就跟html里的属性一样，其值永远是string类型")])]),s("p",[t._v(":someprop里的表达式会在不同语境下有不同的含义，如：")]),s("ol",[s("li",[t._v('表单里，:value="name"，表示输入值会同步到name变量，而文本框显示的指也来自于name变量（补充：这里说法不严谨，准确来说是v-model实现了双向绑定，不过v-model其实是一个语法糖，内部也是使用了:value，所以1、2两点都可以归结一起）')]),s("li",[t._v('非表单情况下，:prop="expr"，prop属性的值为expr表达式的计算结果')]),s("li",[t._v('内联样式、类这两种特殊属性，:style="expr"，:class="expr"，会根据expr进行解析，最终生成目标style字符串 or class字符串')])]),s("p",[t._v("特殊情况")]),s("p",[t._v("prop 值是字符串字面量的时候不需要写绑定语法。"),s("code",[t._v("prop 值是true的时候不需要写绑定语法，也不需要写属性值")]),t._v("。")]),s("h2",{attrs:{id:"computed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#computed","aria-hidden":"true"}},[t._v("#")]),t._v(" computed")]),s("p",[t._v("computed 作用于其属性的getter,类似于")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Object.defineProperty(data, 'message', { \n    enumerable:true,\n    get: function() { \n        return this._message.split('').reverse().join('');\n    } \n});\n")])]),s("h3",{attrs:{id:"computed-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#computed-method","aria-hidden":"true"}},[t._v("#")]),t._v(" computed && method")]),s("p",[t._v("methods 每次都会重新计算\n而 computed 则会依赖于缓存\n除非 computed` 依赖的值发生变化，否则直接调用缓存。")]),s("h2",{attrs:{id:"props"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#props","aria-hidden":"true"}},[t._v("#")]),t._v(" props")]),s("blockquote",[s("p",[t._v("仅仅当成是一种传递数据（而非改变数据的方式），我们可以自己在内部定义变量")])]),s("h2",{attrs:{id:"this-指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this-指向","aria-hidden":"true"}},[t._v("#")]),t._v(" this 指向")]),s("p",[t._v("使用then函数时，this指向的是全局对象window")]),s("h2",{attrs:{id:"axios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#axios","aria-hidden":"true"}},[t._v("#")]),t._v(" axios")]),s("p",[t._v("Vue.protpType.$http = axios;")]),s("h2",{attrs:{id:"总而言之，多用-let-和-const，少用-var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总而言之，多用-let-和-const，少用-var","aria-hidden":"true"}},[t._v("#")]),t._v(" 总而言之，多用 let 和 const，少用 var")]),s("p",[t._v("cosnt定义的变量只能赋值一次（数组和对象来说，值是可以改变的）")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('const arr  = ["a","b","c"];\narr.push("d");\narr.pop();\n')])]),s("p",[t._v("那么什么时候使用 const 呢? 在一些不需要重复赋值的场合可以用:")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const provinces = [];\nconst months = [];\n")])]),s("h2",{attrs:{id:"箭头函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 箭头函数")]),s("p",[t._v("在vue中，使用箭头函数的最大好处就是可以让"),s("code",[t._v("this")]),t._v("指向vue实例")]),s("blockquote",[s("p",[t._v("箭头函数的"),s("code",[t._v("this")]),t._v("对象始终指向定义函数时所在的对象，相当于：")])]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var vm = new Vue({\n    el:'#root',\n    data:{\n        tasks:[]\n    },\n    mounted(){\n        var that = this;\n        axios.get('/tasks')\n        .then(function (response) {\n            that.tasks = response.data;\n        })\n    }\n});\n")])]),s("h1",{attrs:{id:"模板字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" 模板字符串")]),s("p",[t._v("没有模板字符串之前：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let template = '<div class=\"container\"><p>Foo</p></div>';\n")])]),s("p",[t._v("如果要写成多行，可以用反斜杠：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let template = '<div class=\"container\">\\\n                    <p>Foo</p>\\\n                </div>';\n")])]),s("p",[t._v("或者使用数组形式:")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let template = [\n    '<div class=\"container\">',\n    '<p>Foo</p>',\n    '</div>'\n].join('');\n")])]),s("p",[t._v("而使用模板字符串，则可以方便的在多行里面编写模板:")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let template = `\n    <div class="container">\n        <p>Foo</p>\n    </div>\n`\n')])]),s("p",[t._v("由于模板字符串的空格和换行会被保留，为了不让首行多出换行符，可以写成：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let template = `<div class="container">\n                        <p>Foo</p>\n                    </div>\n                `\n')])]),s("p",[t._v("或者使用 trim() 方法从字符串中移除 前导 空格、尾随空格和行终止符。")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let template = `\n    <div class="container">\n        <p>Foo</p>\n    </div>\n`.trim();\n')])]),s("p",[t._v("模板字符串嵌入变量或者表达式的方式也很简单:")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let name = "jack";\nlet template = `\n    <div class="container">\n        <p>${name} is {100 + 100}</p>\n    </div>\n`.trim();\n')])]),s("h1",{attrs:{id:"store"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#store","aria-hidden":"true"}},[t._v("#")]),t._v(" store")]),s("p",[t._v("再次强调，我们通过提交 mutation 的方式，而非直接改变 store.state.count，是因为我们想要更明确地追踪到状态的变化。这个简单的约定能够让你的意图更加明显，这样你在阅读代码的时候能更容易地解读应用内部的状态改变。")]),s("h1",{attrs:{id:"render-h-h-app"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render-h-h-app","aria-hidden":"true"}},[t._v("#")]),t._v(" render: h => h(App)")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("render: function (createElement) {\n    return createElement(App);\n}\n")])]),s("p",[t._v("createElement 函数是用来生成 HTML DOM 元素的，也就是上文中的 generate HTML structures，也就是 Hyperscript，这样作者才把 createElement 简写成 h")]),s("p",[t._v("这个函数的作用就是生成一个 VNode节点，render 函数得到这个 VNode 节点之后，返回给 Vue.js 的 mount 函数，渲染成真实 DOM 节点，并挂载到根节点上。")]),s("h1",{attrs:{id:"q-a"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-a","aria-hidden":"true"}},[t._v("#")]),t._v(" Q & A")]),s("ol",[s("li",[t._v("vue组件注册为什么有时候要在 "),s("code",[t._v("require")]),t._v(" 后面加上 "),s("code",[t._v("default")]),t._v(" ?")])]),s("p",[t._v("webpack 打包时支持 CommonJS、AMD 和 ES6 的模块化系统。\n我们通常写 .vue 单文件组件时，在 script 语言块中使用的是 ES6 的语法，使用 "),s("code",[t._v("export default")]),t._v(" 进行默认导出。")]),s("p",[s("code",[t._v("require")]),t._v(" 是 "),s("code",[t._v("CommonJS")]),t._v("（和 AMD，想不到吧？）的模块导入方式，不支持模块的默认导出，因此导入的结果其实是一个含 "),s("code",[t._v("default")]),t._v(" 属性的对象，因此需要使用 "),s("code",[t._v(".default")]),t._v(" 来获取实际的组件选项。或者使用 ES6 的 import 语句，ES6 的模块化导入导出语法参见 "),s("code",[t._v("http://es6-features.org/#Valu...")]),t._v("，"),s("code",[t._v("import")]),t._v(" 时需要给定一个变量名，"),s("code",[t._v("所有 import 语句必须统一放在模块的开头")]),t._v("。")]),s("p",[t._v("如果 "),s("code",[t._v(".vue")]),t._v(" 文件中使用的本来就是 "),s("code",[t._v("CommonJS")]),t._v(" 或者 "),s("code",[t._v("AMD")]),t._v(" 的模块化系统语法，导出的是 "),s("code",[t._v("module.exports")]),t._v(" 对象作为组件选项，那么使用 "),s("code",[t._v("require")]),t._v(" 导入时就不需要使用 "),s("code",[t._v(".default")]),t._v(" 来获取。")]),s("p",[t._v("1.1 用"),s("code",[t._v("webpack")]),t._v("打包 "),s("code",[t._v("esm")]),t._v(" 成可直接引入的配置")]),s("p",[t._v("之前打包export default导出的包都会成为")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("default")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 内容")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("webpack3多了一个配置")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("libraryExport"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'default'")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 会将default中内容打包")]),t._v("\n")])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \\\\ 内容\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("h1",{attrs:{id:"vue-router"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router","aria-hidden":"true"}},[t._v("#")]),t._v(" vue-router")]),s("ol",[s("li",[t._v("当使用路由参数时，例如从 "),s("code",[t._v("/user/foo")]),t._v(" 导航到 "),s("code",[t._v("/user/bar")]),t._v("，原来的组件实例会被复用。因为两个路由都渲染同个组件，比起销毁再创建，复用则显得更加高效。不过，这也意味着组件的生命周期钩子不会再被调用。")])]),s("p",[t._v("想对路由参数的变化作出响应的话，你可以简单地 watch（监测变化） "),s("code",[t._v("$route")]),t._v(" 对象：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  template"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'...'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  watch"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token string"}},[t._v("'$route'")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token comment"}},[t._v("// 对路由变化作出响应...")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("或者使用 2.2 中引入的 "),s("code",[t._v("beforeRouteUpdate")]),t._v(" 钩子响应变化")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  template"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'...'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("beforeRouteUpdate")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// react to route changes...")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// don't forget to call next()")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("router.push(...)")])]),s("blockquote",[s("p",[t._v("点击 "),s("code",[t._v('<router-link :to="...">')]),t._v(" 等同于调用")])]),s("p",[t._v("该方法的参数可以是一个字符串路径，或者一个描述地址的对象")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 字符串")]),t._v("\nrouter"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'home'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 对象")]),t._v("\nrouter"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'home'")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 命名的路由")]),t._v("\nrouter"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'user'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" userId"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("123")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 带查询参数，变成 /register?plan=private")]),t._v("\nrouter"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'register'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" query"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" plan"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'private'")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("blockquote",[s("p",[t._v("如果提供了 path，params 会被忽略，应该使用如下做法")])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userId "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("123")]),t._v("\nrouter"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'user'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" userId "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// -> /user/123")]),t._v("\nrouter"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token template-string"}},[s("span",{attrs:{class:"token string"}},[t._v("`/user/")]),s("span",{attrs:{class:"token interpolation"}},[s("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("userId"),s("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{attrs:{class:"token string"}},[t._v("`")])]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// -> /user/123")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 这里的 params 不生效")]),t._v("\nrouter"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'/user'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" userId "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// -> /user")]),t._v("\n")])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("router.replace(location, onComplete?, onAbort?)")])]),s("blockquote",[s("p",[t._v("跟 "),s("code",[t._v("router.push")]),t._v(" 很像，唯一的不同就是，它不会向 history 添加新记录，而是跟它的方法名一样 —— 替换掉当前的 "),s("code",[t._v("history")]),t._v(" 记录。")])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("router.go(n)")])]),s("blockquote",[s("p",[t._v("这个方法的参数是一个整数，意思是在 history 记录中向前或者后退多少步，类似 "),s("code",[t._v("window.history.go(n)")])])]),s("h1",{attrs:{id:"导航守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导航守卫","aria-hidden":"true"}},[t._v("#")]),t._v(" 导航守卫")]),s("blockquote",[s("p",[t._v("参数或者查询的改变并不会触发进入/离开的导航守卫")])]),s("h2",{attrs:{id:"router-beforeeach-全局前置守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#router-beforeeach-全局前置守卫","aria-hidden":"true"}},[t._v("#")]),t._v(" router.beforeEach -- 全局前置守卫")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("VueRouter")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nrouter"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{attrs:{id:"router-aftereach-全局后置钩子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#router-aftereach-全局后置钩子","aria-hidden":"true"}},[t._v("#")]),t._v(" router.afterEach -- 全局后置钩子")]),s("blockquote",[s("p",[t._v("这些钩子不会接受 next 函数也不会改变导航本身")])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("router"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("afterEach")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{attrs:{id:"beforeenter-路由独享的守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beforeenter-路由独享的守卫","aria-hidden":"true"}},[t._v("#")]),t._v(" beforeEnter -- 路由独享的守卫")]),s("blockquote",[s("p",[t._v("可以在路由配置上直接定义 "),s("code",[t._v("beforeEnter")]),t._v(" 守卫")])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("VueRouter")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  routes"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      path"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'/foo'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      component"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Foo"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      beforeEnter"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{attrs:{id:"组件内的守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件内的守卫","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件内的守卫")]),s("p",[t._v("beforeRouteEnter\nbeforeRouteUpdate (2.2 新增)\nbeforeRouteLeave")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Foo "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  template"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token template-string"}},[s("span",{attrs:{class:"token string"}},[t._v("`...`")])]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("beforeRouteEnter")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 在渲染该组件的对应路由被 confirm 前调用")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 不！能！获取组件实例 `this`")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 因为当守卫执行前，组件实例还没被创建")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("beforeRouteUpdate")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 在当前路由改变，但是该组件被复用时调用")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 可以访问组件实例 `this`")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("beforeRouteLeave")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 导航离开该组件的对应路由时调用")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("// 可以访问组件实例 `this`")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("h2",{attrs:{id:"完整的导航解析流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完整的导航解析流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 完整的导航解析流程")]),s("ul",[s("li",[t._v("导航被触发。")]),s("li",[t._v("在失活的组件里调用离开守卫。")]),s("li",[t._v("调用全局的 beforeEach 守卫。")]),s("li",[t._v("在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。")]),s("li",[t._v("在路由配置里调用 beforeEnter。")]),s("li",[t._v("解析异步路由组件。")]),s("li",[t._v("在被激活的组件里调用 beforeRouteEnter。")]),s("li",[t._v("调用全局的 beforeResolve 守卫 (2.5+)。")]),s("li",[t._v("导航被确认。")]),s("li",[t._v("调用全局的 afterEach 钩子。")]),s("li",[t._v("触发 DOM 更新。")]),s("li",[t._v("用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。")])]),s("h1",{attrs:{id:"key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key","aria-hidden":"true"}},[t._v("#")]),t._v(" key")]),s("blockquote",[s("p",[t._v("提高循环性能")])]),s("p",[t._v("key 的特殊属性主要用在 Vue的虚拟DOM算法，在新旧nodes对比时辨识VNodes.如果不使用key，Vue会使用一种最大限度减少动态元素并且尽可能的尝试修复/再利用相同类型元素的算法。使用key，它会基于key的变化重新排列元素顺序，并且会移除key不存在的元素。")]),s("p",[s("strong",[t._v("有相同父元素的子元素必须有独特的key。重复的key会造成渲染错误")])]),s("p",[t._v("最常见的用例是结合 v-for")]),s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),s("span",{attrs:{class:"token attr-name"}},[t._v("v-for")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item in items"),s("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{attrs:{class:"token attr-name"}},[t._v(":key")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item.id"),s("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),s("p",[t._v("它也可以用于强制替换元素/组件而不是重复使用它。当你遇到如下场景时它可能会很有用:")]),s("p",[t._v("完整地触发组件的生命周期钩子\n触发过渡")]),s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("transition")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),s("span",{attrs:{class:"token attr-name"}},[t._v(":key")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ text }}"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("transition")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),s("p",[t._v("当 text 发生改变时，"),s("code",[t._v("<span>")]),t._v(" 会随时被更新，因此会触发过渡。")])])}],!1,null,null,null);a.default=e.exports}}]);