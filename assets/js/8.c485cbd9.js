(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{277:function(e,t,o){"use strict";o.r(t);var r=o(1),n=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"content"},[o("h1",{attrs:{id:"使用范围"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#使用范围","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用范围")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("require: node 和 es6 都支持的引入\nexport / import : 只有es6 支持的导出引入\nmodule.exports / exports: 只有 node 支持的导出\n")])]),o("h1",{attrs:{id:"node模块"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node模块","aria-hidden":"true"}},[e._v("#")]),e._v(" node模块")]),o("p",[e._v("node里的模块系统遵循的是commonJS规范")]),o("p",[e._v("commonJS定义的模块分为：")]),o("ul",[o("li",[e._v("模块标识（module）")]),o("li",[e._v("模块定义（exports）")]),o("li",[e._v("模块引用（require）")])]),o("p",[e._v("先解释下"),o("code",[e._v("exports")]),e._v("和"),o("code",[e._v("module.exports")])]),o("p",[e._v("在一个node执行一个文件时，会给这个文件内生成一个 exports和module对象，\n而module又有一个exports属性。他们之间的关系如下图，都指向一块{}内存区域。")]),o("p",[o("code",[e._v("此处补node模块化的实现源码")])]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("exports = module.exports = {};\n")])]),o("p",[e._v("看看代码")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("//utils.js\nlet a = 100;\n\nconsole.log(module.exports); //能打印出结果为：{}\nconsole.log(exports); //能打印出结果为：{}\n\nexports.a = 200; //这里辛苦劳作帮 module.exports 的内容给改成 {a : 200}\n\nexports = '指向其他内存区'; //这里把exports的指向指走\n\n//test.js\n\nvar a = require('/utils');\nconsole.log(a) // 打印为 {a : 200} \n")])]),o("blockquote",[o("p",[e._v("从上面可以看出，其实require导出的内容是module.exports的指向的内存块内容，并不是exports的。\n简而言之，区分他们之间的区别就是 exports 只是 module.exports的引用，辅助后者添加内容用的。")])]),o("p",[e._v("用白话讲就是，exports只辅助module.exports操作内存中的数据，辛辛苦苦各种操作数据完，累得要死，结果到最后真正被require出去的内容还是module.exports的，嘻嘻。")]),o("p",[e._v("避免糊涂，尽量都用 module.exports 导出，然后用require导入。")]),o("h1",{attrs:{id:"es中的模块导出导入"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#es中的模块导出导入","aria-hidden":"true"}},[e._v("#")]),e._v(" es中的模块导出导入")]),o("p",[e._v("export 和 export default")]),o("p",[e._v("首先我们讲这两个导出，下面我们讲讲它们的区别：")]),o("ul",[o("li",[e._v("export与export default均可用于导出常量、函数、文件、模块等")]),o("li",[e._v("在一个文件或模块中，export、import可以有多个，export default仅有一个")]),o("li",[e._v("通过export方式导出，在导入时要加{ }，export default则不需要")]),o("li",[e._v("export能直接导出变量表达式，export default不行。")])]),o("p",[e._v("代码验证")]),o("p",[e._v("testEs6Export.js")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("'use strict'\n//导出变量\nexport const a = '100';  \n\n //导出方法\nexport const dogSay = function(){ \n    console.log('wang wang');\n}\n\n //导出方法第二种\nfunction catSay(){\n   console.log('miao miao'); \n}\nexport { catSay };\n\n//export default导出\nconst m = 100;\nexport default m; \n//export defult const m = 100;// 这里不能写这种格式。\n")])]),o("p",[e._v("index.js")]),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("//index.js\n'use strict'\nvar express = require('express');\nvar router = express.Router();\n\nimport { dogSay, catSay } from './testEs6Export'; //导出了 export 方法 \nimport m from './testEs6Export';  //导出了 export default \n\nimport * as testModule from './testEs6Export'; //as 集合成对象导出\n\n\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  dogSay();\n  catSay();\n  console.log(m);\n  testModule.dogSay();\n  console.log(testModule.m); // undefined , 因为  as 导出是 把 零散的 export 聚集在一起作为一个对象，而export default 是导出为 default属性。\n  console.log(testModule.default); // 100\n  res.send('恭喜你，成功验证');\n});\n\nmodule.exports = router;\n")])])])}],!1,null,null,null);t.default=n.exports}}]);